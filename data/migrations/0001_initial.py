# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-07-31 06:29
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0002_userprofile_income'),
    ]

    operations = [
        migrations.CreateModel(
            name='AssetClassification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classificationType', models.CharField(max_length=10)),
                ('classificationValue', models.CharField(max_length=30)),
                ('allocation', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalBalance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('asOfDate', models.DateField()),
                ('isAsset', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Holding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accountId', models.BigIntegerField()),
                ('cusipNumber', models.CharField(blank=True, max_length=9)),
                ('description', models.CharField(blank=True, max_length=30)),
                ('holdingType', models.CharField(blank=True, max_length=20)),
                ('quantity', models.PositiveIntegerField(blank=True)),
                ('symbol', models.CharField(blank=True, max_length=5)),
                ('unvestedQuantity', models.PositiveIntegerField(blank=True)),
                ('vestedQuantity', models.PositiveIntegerField(blank=True)),
                ('vestedSharesExercisable', models.PositiveIntegerField(blank=True)),
                ('vestingDate', models.DateField(blank=True)),
                ('contractQuanitty', models.PositiveIntegerField(blank=True)),
                ('couponRate', models.FloatField(blank=True)),
                ('currencyType', models.CharField(blank=True, max_length=3)),
                ('exercisedQuantity', models.PositiveIntegerField(blank=True)),
                ('expirationDate', models.DateField(blank=True)),
                ('grantDate', models.DateField(blank=True)),
                ('interestRate', models.FloatField(blank=True)),
                ('maturityDate', models.DateField(blank=True)),
                ('optionType', models.CharField(blank=True, max_length=4)),
                ('term', models.TextField(blank=True)),
                ('providerAccountID', models.BigIntegerField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='InvestmentOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('optionId', models.BigIntegerField()),
                ('cusipNumber', models.CharField(blank=True, max_length=9)),
                ('description', models.CharField(blank=True, max_length=40)),
                ('fiveYearReturn', models.FloatField(blank=True)),
                ('holdingType', models.CharField(blank=True, max_length=20)),
                ('isin', models.CharField(blank=True, max_length=12)),
                ('oneMonthReturn', models.FloatField(blank=True)),
                ('oneYearReturn', models.FloatField(blank=True)),
                ('priceAsOfDate', models.DateField()),
                ('sedol', models.CharField(blank=True, max_length=7)),
                ('symbol', models.CharField(blank=True, max_length=5)),
                ('tenYearReturn', models.FloatField(blank=True)),
                ('threeMonthReturn', models.FloatField(blank=True)),
                ('inceptionToDateReturn', models.FloatField(blank=True)),
                ('yearToDateReturn', models.FloatField(blank=True)),
                ('inceptionDate', models.DateField(blank=True)),
                ('grossExpenseRatio', models.FloatField(blank=True)),
                ('netExpenseRatio', models.FloatField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='InvestmentPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('planId', models.BigIntegerField()),
                ('name', models.CharField(blank=True, max_length=40)),
                ('number', models.BigIntegerField(blank=True)),
                ('provider', models.CharField(blank=True, max_length=40)),
                ('asOfDate', models.DateField()),
                ('returnAsOfDate', models.DateField()),
                ('feesAsOfDate', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Money',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('currency', models.CharField(max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='RefreshInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statusCode', models.PositiveSmallIntegerField()),
                ('statusMessage', models.CharField(blank=True, max_length=40)),
                ('status', models.CharField(blank=True, max_length=40)),
                ('additionalStatus', models.CharField(blank=True, max_length=40)),
                ('nextRefreshScheduled', models.DateTimeField()),
                ('lastRefreshed', models.DateTimeField()),
                ('lastRefreshAttempt', models.DateTimeField()),
                ('actionRequested', models.CharField(blank=True, max_length=20)),
                ('message', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='RewardBalance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True)),
                ('balance', models.PositiveIntegerField()),
                ('units', models.CharField(blank=True, max_length=30)),
                ('balanceType', models.CharField(blank=True, max_length=20)),
                ('expiryDate', models.DateField()),
                ('balanceToLevel', models.PositiveIntegerField(blank=True)),
                ('balanceToReward', models.PositiveIntegerField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('symbol', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('lastUpdated', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='StockPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('price', models.DecimalField(decimal_places=6, max_digits=11)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.Stock')),
            ],
        ),
        migrations.CreateModel(
            name='UserData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userProfile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='data', to='account.UserProfile')),
            ],
            options={
                'verbose_name': 'UserData',
                'verbose_name_plural': 'UserData',
            },
        ),
        migrations.CreateModel(
            name='YodleeAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accountID', models.BigIntegerField()),
                ('accountName', models.CharField(blank=True, max_length=40)),
                ('accountNumber', models.BigIntegerField(blank=True)),
                ('apr', models.FloatField(blank=True)),
                ('isAsset', models.BooleanField()),
                ('classification', models.CharField(blank=True, max_length=14)),
                ('container', models.CharField(max_length=25)),
                ('dueDate', models.DateField(blank=True)),
                ('expirationDate', models.DateField(blank=True)),
                ('lastPaymentDate', models.DateField(blank=True)),
                ('lastUpdated', models.DateTimeField(blank=True)),
                ('isManual', models.BooleanField()),
                ('maturityDate', models.DateField(blank=True)),
                ('nickname', models.CharField(blank=True, max_length=40)),
                ('status', models.CharField(blank=True, max_length=12)),
                ('accountType', models.CharField(blank=True, max_length=40)),
                ('homeInsuranceType', models.CharField(blank=True, max_length=30)),
                ('interestRate', models.FloatField(blank=True)),
                ('lifeInsuranceType', models.CharField(blank=True, max_length=30)),
                ('providerId', models.PositiveIntegerField(blank=True)),
                ('providerName', models.CharField(blank=True, max_length=40)),
                ('policyStatus', models.CharField(blank=True, max_length=30)),
                ('premiumPaymentTerm', models.PositiveIntegerField(blank=True)),
                ('term', models.TextField(blank=True)),
                ('enrollmentDate', models.DateField(blank=True)),
                ('primaryRewardUnit', models.CharField(blank=True, max_length=25)),
                ('currentLevel', models.CharField(blank=True, max_length=20)),
                ('nextLevel', models.CharField(blank=True, max_length=20)),
                ('lastEmployeeContributionDate', models.DateField(blank=True)),
                ('providerAccountId', models.BigIntegerField(blank=True)),
                ('userData', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.UserData')),
            ],
        ),
        migrations.CreateModel(
            name='_401kloan',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='accountAmountDue',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='accountBalance',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='accountLastPaymentAmount',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='accountRefreshInfo',
            fields=[
                ('refreshinfo_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.RefreshInfo')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.refreshinfo',),
        ),
        migrations.CreateModel(
            name='accountRewardBalance',
            fields=[
                ('rewardbalance_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.RewardBalance')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.rewardbalance',),
        ),
        migrations.CreateModel(
            name='annuityBalance',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='availableBalance',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='availableCash',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='availableCredit',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='availableLoan',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='balance',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='cash',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='cashValue',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='costBasis',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='currentBalance',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='employeeContribution',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='employerContribution',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='escrowBalance',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='faceAmount',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='grossExpenseAmount',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='holdingPrice',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='lastEmployeeContributionAmount',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='lastPayment',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='marginBalance',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='matuityAmount',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='minimumAmountDue',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='moneyMarketBalance',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='netExpenseAmount',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='optionPrice',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='originalLoanAmount',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='parValue',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='principalBalance',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='recurringPayment',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='runningBalance',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='shortBalance',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='spread',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='strikePrice',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='totalCashLimit',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='totalCreditLimit',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='totalCreditLine',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='totalUnvestedBalance',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='totalVestedBalance',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
                ('yodleeAccount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='unvestedValue',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='value',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
            ],
            bases=('data.money',),
        ),
        migrations.CreateModel(
            name='vestedValue',
            fields=[
                ('money_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data.Money')),
            ],
            bases=('data.money',),
        ),
        migrations.AddField(
            model_name='investmentplan',
            name='yodleeAccount',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount'),
        ),
        migrations.AddField(
            model_name='investmentoption',
            name='yodleeAccount',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount'),
        ),
        migrations.AddField(
            model_name='holding',
            name='yodleeAccount',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount'),
        ),
        migrations.AddField(
            model_name='historicalbalance',
            name='yodleeAccount',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.YodleeAccount'),
        ),
        migrations.AddField(
            model_name='assetclassification',
            name='holding',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.Holding'),
        ),
        migrations.AddField(
            model_name='vestedvalue',
            name='holding',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.Holding'),
        ),
        migrations.AddField(
            model_name='value',
            name='holding',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.Holding'),
        ),
        migrations.AddField(
            model_name='unvestedvalue',
            name='holding',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.Holding'),
        ),
        migrations.AddField(
            model_name='strikeprice',
            name='holding',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.Holding'),
        ),
        migrations.AddField(
            model_name='spread',
            name='holding',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.Holding'),
        ),
        migrations.AddField(
            model_name='parvalue',
            name='holding',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.Holding'),
        ),
        migrations.AddField(
            model_name='optionprice',
            name='investmentOption',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.InvestmentOption'),
        ),
        migrations.AddField(
            model_name='netexpenseamount',
            name='investmentOption',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.InvestmentOption'),
        ),
        migrations.AddField(
            model_name='holdingprice',
            name='holding',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.Holding'),
        ),
        migrations.AddField(
            model_name='grossexpenseamount',
            name='investmentOption',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.InvestmentOption'),
        ),
        migrations.AddField(
            model_name='employercontribution',
            name='holding',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.Holding'),
        ),
        migrations.AddField(
            model_name='employeecontribution',
            name='holding',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.Holding'),
        ),
        migrations.AddField(
            model_name='costbasis',
            name='holding',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.Holding'),
        ),
        migrations.AddField(
            model_name='balance',
            name='historicalBalance',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data.HistoricalBalance'),
        ),
    ]
